
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AL AS Assign Bag CDLL Comillas DLQ False GT HSOA HSSC LP LT Map None NumberComp RP SArrayList SLL Separator Set StringComp Tree True add character clear contains digit get index print remove removeAll use Program : Declaration\n                | Program Separator Declaration\n                | Program Separator Action\n\n     Action : use Id Assign add Prim\n                | use Id Assign add Tuples\n                | use Id Assign remove Prim\n                | use Id Assign remove Tuples\n                | use Id Assign contains Prim\n                | use Id Assign contains Tuples\n                | use Id Assign clear\n                | use Id Assign get Prim\n                | use Id Assign get Tuples\n                | use Id Assign get index Assign Int\n                | use Id Assign removeAll Prim\n                | use Id Assign removeAll Tuples\n                | print Id\n     Declaration : InputOptionalStruct LT Elements GT\n                    | InputRequiredStruct LT Elements GT\n                    | Structures Id Assign LT Elements GT\n                    | InputOptionalStruct LT  GT\n                    | InputRequiredStruct LT  GT\n                    | Structures Id Assign LT  GT\n     Tuples : LP Prim Separator Prim RP\n    \n\n     Elements : Prim\n                  | Elements Separator Elements\n                  | Tuples\n                \n     Prim : Bool\n                | Int\n                | Id\n                | String\n     Structures : DLQ\n                    | Map\n                    | AL\n                    | CDLL\n                    | AS\n                    | Set\n                    | Bag\n                    | SLL\n     InputRequiredStruct :  Tree Id Assign LP Comparator RP\n                            |  SArrayList Id Assign LP Comparator Separator Comparator RP\n     InputOptionalStruct : HSOA Id Assign LP Comparator Separator Comparator RP\n                            | HSSC Id Assign LP Comparator Separator Comparator RP\n                            | HSSC Id Assign LP RP\n                            | HSOA Id Assign LP RP\n     Comparator : NumberComp\n                    | StringComp\n    \n    Id : character\n        | Id digit\n        | Id character\n    \n    Bool : True\n        | False\n    \n    Int : digit\n        | Int digit\n    \n    String : Comillas Prim Comillas\n            | Comillas Tuples Comillas\n    '
    
_lr_action_items = {'HSOA':([0,18,],[6,6,]),'HSSC':([0,18,],[7,7,]),'Tree':([0,18,],[8,8,]),'SArrayList':([0,18,],[9,9,]),'DLQ':([0,18,],[10,10,]),'Map':([0,18,],[11,11,]),'AL':([0,18,],[12,12,]),'CDLL':([0,18,],[13,13,]),'AS':([0,18,],[14,14,]),'Set':([0,18,],[15,15,]),'Bag':([0,18,],[16,16,]),'SLL':([0,18,],[17,17,]),'$end':([1,2,22,27,28,32,35,36,37,38,40,41,42,45,47,48,54,55,57,61,70,71,73,85,89,94,95,96,97,98,99,100,101,103,104,105,113,],[0,-1,-47,-2,-3,-20,-27,-28,-29,-30,-50,-51,-52,-21,-48,-49,-16,-17,-53,-18,-54,-55,-22,-10,-19,-4,-5,-6,-7,-8,-9,-11,-12,-14,-15,-23,-13,]),'Separator':([1,2,22,27,28,31,32,33,34,35,36,37,38,40,41,42,44,45,47,48,54,55,57,58,61,68,70,71,72,73,74,76,77,78,81,85,89,94,95,96,97,98,99,100,101,103,104,105,113,],[18,-1,-47,-2,-3,56,-20,-24,-26,-27,-28,-29,-30,-50,-51,-52,56,-21,-48,-49,-16,-17,-53,69,-18,56,-54,-55,56,-22,90,-45,-46,91,93,-10,-19,-4,-5,-6,-7,-8,-9,-11,-12,-14,-15,-23,-13,]),'LT':([3,4,46,75,79,92,110,111,112,],[19,20,62,-44,-43,-39,-41,-42,-40,]),'character':([5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,29,30,37,39,43,47,48,53,54,56,62,69,82,83,84,86,87,],[22,22,22,22,22,-31,-32,-33,-34,-35,-36,-37,-38,22,22,48,-47,48,48,48,48,22,22,48,22,22,-48,-49,48,48,22,22,22,22,22,22,22,22,]),'use':([18,],[29,]),'print':([18,],[30,]),'GT':([19,20,22,31,33,34,35,36,37,38,40,41,42,44,47,48,57,62,68,70,71,72,105,],[32,45,-47,55,-24,-26,-27,-28,-29,-30,-50,-51,-52,61,-48,-49,-53,73,-25,-54,-55,89,-23,]),'LP':([19,20,43,49,50,51,52,56,62,82,83,84,86,87,],[39,39,39,63,64,65,66,39,39,39,39,39,39,39,]),'True':([19,20,39,43,56,62,69,82,83,84,86,87,],[40,40,40,40,40,40,40,40,40,40,40,40,]),'False':([19,20,39,43,56,62,69,82,83,84,86,87,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'digit':([19,20,21,22,23,24,25,26,36,37,39,42,43,47,48,53,54,56,57,62,69,82,83,84,86,87,109,113,],[42,42,47,-47,47,47,47,47,57,47,42,-52,42,-48,-49,47,47,42,-53,42,42,42,42,42,42,42,42,57,]),'Comillas':([19,20,22,35,36,37,38,39,40,41,42,43,47,48,56,57,59,60,62,69,70,71,82,83,84,86,87,105,],[43,43,-47,-27,-28,-29,-30,43,-50,-51,-52,43,-48,-49,43,-53,70,71,43,43,-54,-55,43,43,43,43,43,-23,]),'Assign':([21,22,23,24,25,26,47,48,53,102,],[46,-47,49,50,51,52,-48,-49,67,109,]),'RP':([22,35,36,37,38,40,41,42,47,48,57,63,64,70,71,76,77,80,88,106,107,108,],[-47,-27,-28,-29,-30,-50,-51,-52,-48,-49,-53,75,79,-54,-55,-45,-46,92,105,110,111,112,]),'NumberComp':([63,64,65,66,90,91,93,],[76,76,76,76,76,76,76,]),'StringComp':([63,64,65,66,90,91,93,],[77,77,77,77,77,77,77,]),'add':([67,],[82,]),'remove':([67,],[83,]),'contains':([67,],[84,]),'clear':([67,],[85,]),'get':([67,],[86,]),'removeAll':([67,],[87,]),'index':([86,],[102,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'Declaration':([0,18,],[2,27,]),'InputOptionalStruct':([0,18,],[3,3,]),'InputRequiredStruct':([0,18,],[4,4,]),'Structures':([0,18,],[5,5,]),'Id':([5,6,7,8,9,19,20,29,30,39,43,56,62,69,82,83,84,86,87,],[21,23,24,25,26,37,37,53,54,37,37,37,37,37,37,37,37,37,37,]),'Action':([18,],[28,]),'Elements':([19,20,56,62,],[31,44,68,72,]),'Prim':([19,20,39,43,56,62,69,82,83,84,86,87,],[33,33,58,59,33,33,88,94,96,98,100,103,]),'Tuples':([19,20,43,56,62,82,83,84,86,87,],[34,34,60,34,34,95,97,99,101,104,]),'Bool':([19,20,39,43,56,62,69,82,83,84,86,87,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'Int':([19,20,39,43,56,62,69,82,83,84,86,87,109,],[36,36,36,36,36,36,36,36,36,36,36,36,113,]),'String':([19,20,39,43,56,62,69,82,83,84,86,87,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'Comparator':([63,64,65,66,90,91,93,],[74,78,80,81,106,107,108,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> Declaration','Program',1,'p_Program','parser.py',68),
  ('Program -> Program Separator Declaration','Program',3,'p_Program','parser.py',69),
  ('Program -> Program Separator Action','Program',3,'p_Program','parser.py',70),
  ('Action -> use Id Assign add Prim','Action',5,'p_Action','parser.py',80),
  ('Action -> use Id Assign add Tuples','Action',5,'p_Action','parser.py',81),
  ('Action -> use Id Assign remove Prim','Action',5,'p_Action','parser.py',82),
  ('Action -> use Id Assign remove Tuples','Action',5,'p_Action','parser.py',83),
  ('Action -> use Id Assign contains Prim','Action',5,'p_Action','parser.py',84),
  ('Action -> use Id Assign contains Tuples','Action',5,'p_Action','parser.py',85),
  ('Action -> use Id Assign clear','Action',4,'p_Action','parser.py',86),
  ('Action -> use Id Assign get Prim','Action',5,'p_Action','parser.py',87),
  ('Action -> use Id Assign get Tuples','Action',5,'p_Action','parser.py',88),
  ('Action -> use Id Assign get index Assign Int','Action',7,'p_Action','parser.py',89),
  ('Action -> use Id Assign removeAll Prim','Action',5,'p_Action','parser.py',90),
  ('Action -> use Id Assign removeAll Tuples','Action',5,'p_Action','parser.py',91),
  ('Action -> print Id','Action',2,'p_Action','parser.py',92),
  ('Declaration -> InputOptionalStruct LT Elements GT','Declaration',4,'p_Declaration','parser.py',121),
  ('Declaration -> InputRequiredStruct LT Elements GT','Declaration',4,'p_Declaration','parser.py',122),
  ('Declaration -> Structures Id Assign LT Elements GT','Declaration',6,'p_Declaration','parser.py',123),
  ('Declaration -> InputOptionalStruct LT GT','Declaration',3,'p_Declaration','parser.py',124),
  ('Declaration -> InputRequiredStruct LT GT','Declaration',3,'p_Declaration','parser.py',125),
  ('Declaration -> Structures Id Assign LT GT','Declaration',5,'p_Declaration','parser.py',126),
  ('Tuples -> LP Prim Separator Prim RP','Tuples',5,'p_Tuples','parser.py',183),
  ('Elements -> Prim','Elements',1,'p_Elements','parser.py',191),
  ('Elements -> Elements Separator Elements','Elements',3,'p_Elements','parser.py',192),
  ('Elements -> Tuples','Elements',1,'p_Elements','parser.py',193),
  ('Prim -> Bool','Prim',1,'p_Prim','parser.py',210),
  ('Prim -> Int','Prim',1,'p_Prim','parser.py',211),
  ('Prim -> Id','Prim',1,'p_Prim','parser.py',212),
  ('Prim -> String','Prim',1,'p_Prim','parser.py',213),
  ('Structures -> DLQ','Structures',1,'p_Structures','parser.py',219),
  ('Structures -> Map','Structures',1,'p_Structures','parser.py',220),
  ('Structures -> AL','Structures',1,'p_Structures','parser.py',221),
  ('Structures -> CDLL','Structures',1,'p_Structures','parser.py',222),
  ('Structures -> AS','Structures',1,'p_Structures','parser.py',223),
  ('Structures -> Set','Structures',1,'p_Structures','parser.py',224),
  ('Structures -> Bag','Structures',1,'p_Structures','parser.py',225),
  ('Structures -> SLL','Structures',1,'p_Structures','parser.py',226),
  ('InputRequiredStruct -> Tree Id Assign LP Comparator RP','InputRequiredStruct',6,'p_InputRequiredStruct','parser.py',245),
  ('InputRequiredStruct -> SArrayList Id Assign LP Comparator Separator Comparator RP','InputRequiredStruct',8,'p_InputRequiredStruct','parser.py',246),
  ('InputOptionalStruct -> HSOA Id Assign LP Comparator Separator Comparator RP','InputOptionalStruct',8,'p_InputOptionalStruct','parser.py',257),
  ('InputOptionalStruct -> HSSC Id Assign LP Comparator Separator Comparator RP','InputOptionalStruct',8,'p_InputOptionalStruct','parser.py',258),
  ('InputOptionalStruct -> HSSC Id Assign LP RP','InputOptionalStruct',5,'p_InputOptionalStruct','parser.py',259),
  ('InputOptionalStruct -> HSOA Id Assign LP RP','InputOptionalStruct',5,'p_InputOptionalStruct','parser.py',260),
  ('Comparator -> NumberComp','Comparator',1,'p_Comparator','parser.py',279),
  ('Comparator -> StringComp','Comparator',1,'p_Comparator','parser.py',280),
  ('Id -> character','Id',1,'p_Id','parser.py',290),
  ('Id -> Id digit','Id',2,'p_Id','parser.py',291),
  ('Id -> Id character','Id',2,'p_Id','parser.py',292),
  ('Bool -> True','Bool',1,'p_Bool','parser.py',303),
  ('Bool -> False','Bool',1,'p_Bool','parser.py',304),
  ('Int -> digit','Int',1,'p_Int','parser.py',314),
  ('Int -> Int digit','Int',2,'p_Int','parser.py',315),
  ('String -> Comillas Prim Comillas','String',3,'p_String','parser.py',326),
  ('String -> Comillas Tuples Comillas','String',3,'p_String','parser.py',327),
]
